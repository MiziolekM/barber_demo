#
# zmiana portu serwera
#
server.port=8081

#
# konfiguracja bazy danych
#
spring.datasource.url = jdbc:mysql://localhost:3306/barber_demo?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username = hbstudent
spring.datasource.password = hbstudent
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.current_session_context_class=thread
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
#
# konfiguracja prefixów i sufixów
#
spring.mvc.view.prefix: /WEB-INF/view/
spring.mvc.view.suffix: .jsp

#
# info.app
#
info.app.name=Moja aplikacja demo :-)
info.app.description=Opis mojej aplikacji :-)
info.app.version=1.0.5

#
# spring security
#
spring.security.user.name=user
spring.security.user.password=topsecret

#
# Utrzymaj polczenie przy zyciu bezczynnosci przez dlugi czas (potrzebne w produkcji)
#
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

#
# zapytania wykorzystujace do autoryzacji
#
spring.queries.users-query=select u.username, u.password, u.enabled from users u where u.username=?
spring.queries.roles-query=select u.username, r.role from users u inner join users_roles ur on(u.id_user=ur.user_id) inner join roles r on(ur.role_id=r.id_role) where u.username=?

spring.resources.add-mappings=true